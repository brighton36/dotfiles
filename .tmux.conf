############################################################################
# Global options
############################################################################
# large history
set-option -g history-limit 10000

# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on

set-option -g status-position top

# Automatically set window title
#setw -g automatic-rename
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'
# Let's turn this off for now, and see if I start using leader-, instead
set-option -g allow-rename off

# Start the window ordering at 1, instead of zero. keeps it easy on the kb
set -g base-index 1

############################################################################
# Status Bar
############################################################################
set-option -g status-justify right
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g visual-activity on

# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'


############################################################################
# Unbindings
############################################################################
unbind [ # unbind copy mode 
unbind ] # unbind paste 
unbind j
unbind o # unbind next-pane
unbind \; # unbind last-pane
unbind p # unbind previous-window
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split
unbind Space


############################################################################
# Bindings
############################################################################
# reload tmux conf
bind-key r source-file ~/.tmux.conf

# Last window
bind-key C-a last-window

# new split in current pane (horizontal / vertical)
bind-key - split-window -v # split pane horizontally

# split pane vertically:
# It seems that tmux's older than version three, don't escape the backslash on 
# bind-key
if-shell '~/bin/tmux_version.sh lt 3'  'bind-key \ split-window -h'
if-shell '~/bin/tmux_version.sh gte 3' 'bind-key \\ split-window -h'
#if-shell 'true' 'bind-key \\ split-window -h'

# Start Copy-mode and paste:
bind-key Space copy-mode
bind-key p paste-buffer

# Select next pane:
bind-key [ select-pane -t :.-
bind-key ] select-pane -t :.+

# switch panes using Alt-[] without prefix
bind -n M-[ select-pane -t :.-
bind -n M-] select-pane -t :.+

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D


# NOTE: This is the default config, which is what we want anyways:
# bind-key { swap-pane -U
# bind-key } swap-pane -D

############################################################################
# windows
############################################################################
bind C-j previous-window
bind C-k next-window
bind-key C-a last-window # C-a C-a for last active window
bind A command-prompt "rename-window %%"
# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# It seems that in this particular case, Screen has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Resizing ---------------------------------------------------------------
bind-key C-h resize-pane -L
bind-key C-j resize-pane -D
bind-key C-k resize-pane -U
bind-key C-l resize-pane -R

############################################################################
# Copy and Paste
############################################################################
# use vim motion keys while in copy mode
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# This syncronizes our copy with the system buffer:
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "/usr/bin/xclip -i -f -selection primary | /usr/bin/xclip -i -selection clipboard"

############################################################################
# layouts
############################################################################
bind-key _ select-layout "even-vertical"
bind-key | select-layout "even-horizontal"

############################################################################
# Colors
############################################################################
# To get the palette: 
# bash -c 'for i in {0..255}; do printf "\\x1b[38;5;${i}mcolour${i}\\x1b[0m\\n"; done'

# Status bar
set -g status-style "fg=colour7,bg=colour4"
set -g status-left ' ‚å®   #T#[default]'
set -g status-right-length 50
set -g status-right ' #[bg=colour9] ‚õÅ #[bold]#S #[nobold,bg=colour13] üíª #(hostname) #[bg=colour4] ‚è≤  %m-%d %R #[default]'

# message text
set -g message-style fg=colour09,bg=colour07 #orange and base02

# Pane Borders:
set -g pane-border-style fg=colour14
set -g pane-active-border-style fg=colour04

# clock
set -g clock-mode-colour colour02 #green

# bell
set -g window-status-bell-style fg=colour07,bg=colour01 #base02, red
